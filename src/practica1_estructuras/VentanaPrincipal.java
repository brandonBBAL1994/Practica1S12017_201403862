/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package practica1_estructuras;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.xml.sax.SAXException;


/**
 *
 * @author Alvarez
 */
public class VentanaPrincipal extends javax.swing.JFrame {
public ListaSimplePalabra listaDiccionario = new ListaSimplePalabra();;
    boolean analizado = false, jugadorCreado = false;
     public ListaCircularJugador listaJugador  = new ListaCircularJugador();;
    public ColaLetras cLetras = new ColaLetras();
    Modulo mod = new Modulo();
    
    /**
     * Creates new form VentanaPrincipal
     */
    public VentanaPrincipal() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        txtJugadores = new javax.swing.JTextField();
        btnAgregarJugador = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Leer Archivo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Jugar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        btnAgregarJugador.setText("Agregar Jugador");
        btnAgregarJugador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarJugadorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addComponent(jButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtJugadores)
                            .addComponent(btnAgregarJugador, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(74, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 98, Short.MAX_VALUE)
                .addComponent(txtJugadores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAgregarJugador)
                .addGap(52, 52, 52)
                .addComponent(jButton2)
                .addGap(33, 33, 33))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
      JFileChooser xx = new JFileChooser();
      FileNameExtensionFilter filtro = new FileNameExtensionFilter("XML FILES","xml");
      xx.setFileFilter(filtro);
      xx.showOpenDialog(null);
      
      File archivo = xx.getSelectedFile();
      
        try {
            DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
            DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
            Document doc = dBuilder.parse(archivo);
            doc.getDocumentElement().normalize();
            ListaSimplePalabra lp =new ListaSimplePalabra();
            NodeList listadoDiccionario = doc.getElementsByTagName("diccionario");
            Node p0 = listadoDiccionario.item(0);
            Element palabras = (Element)p0;
            NodeList listadoPalabra = palabras.getElementsByTagName("palabra");
            
            for (int i = 0; i<listadoPalabra.getLength();i++){
                Node palabra = listadoPalabra.item(i);
                Element elemento = (Element)palabra;
                
                //listaDiccionario.agregarPalabraAlFinal(elemento.getTextContent());
                mod.getLp().agregarPalabraAlFinal(elemento.getTextContent());
            }
            mod.getLp().mostrarPalabras();
         
            analizado = true;
            
            int a,e,o,i,s,n,l,r,u,t,d,g,c,b,m,p,h,f,v,y,q,j,ñ,x,z;
            a=0;
            e=0;
            o=0;
            i=0;
            s=0;
            n=0;
            l=0;
            r=0;
            u=0;
            t=0; //1 PUNTO
            d=0;
            g=0; //2 PUNTOS
            c=0;
            b=0;
            m=0;
            p=0;//3 PUNTOS
            h=0;
            f=0;
            v=0;
            y=0; // 4 PUNTOS
            q=0; //5 puntos
            j=0;
            ñ=0;
            x=0; //8 PUNTOS
            z=0;//10 PUNTOS
            ColaLetras cola = new ColaLetras();
            
            while(!(a==12 && e==12 && o==9 && i==6 && s==6 && n==5 && l==4 && r==5 && u==5 && t==4 && d==5 && g==2 && c==4 && b==2 && m==2 && p==2 && h==2 && f==1 && v==1 && y==1 && q==1 && j==1 && ñ==1 && x==1 && z==1)){
                int al = (int)(Math.random()*26);
                switch(al){
                    case 1:
                        if(a<12){
                         
                            cola.insertarFicha("a", 1);
                            a++;
                        }
                    
                    case 2:
                        if(e<12){
                            cola.insertarFicha("e", 1);
                            e++;
                        }
                    
                    case 3:
                        if(o<9){
                            cola.insertarFicha("o", 1);
                            o++;
                        }
                    
                    case 4:
                        if(i<6){
                            cola.insertarFicha("i", 1);
                            i++;
                        }
                       
                    case 5:
                        if(s<6){
                            cola.insertarFicha("s", 1);
                            s++;
                        } 
                       
                    case 6:
                         if(n<5){
                            cola.insertarFicha("n", 1);
                            n++;
                        }
                        
                    case 7:
                         if(l<4){
                            cola.insertarFicha("l", 1);
                            l++;
                        }
                          
                    case 8:
                         if(r<5){
                            cola.insertarFicha("r", 1);
                            r++;
                        }
                        
                    case 9:
                         if(u<5){
                            cola.insertarFicha("u", 1);
                            u++;
                        }
                        
                    case 10:
                         if(t<4){
                            cola.insertarFicha("t", 1);
                            t++;
                        }
                        
                    case 11:
                         if(d<5){
                            cola.insertarFicha("d", 2);
                            d++;
                        }
                        
                    case 12:
                         if(g<2){
                            cola.insertarFicha("g", 2);
                            g++;
                        }
                      
                    case 13:
                         if(c<4){
                            cola.insertarFicha("c", 3);
                            c++;
                        }
                    case 14:
                         if(b<2){
                            cola.insertarFicha("b", 3);
                            b++;
                        }
                          
                    case 15:
                         if(m<2){
                            cola.insertarFicha("m", 3);
                            m++;
                        }
                       
                    case 16:
                         if(p<2){
                            cola.insertarFicha("p", 3);
                            p++;
                        }
                        
                    case 17:
                         if(h<2){
                            cola.insertarFicha("h", 4);
                            h++;
                        }
                        
                    case 18:
                         if(f<1){
                            cola.insertarFicha("f", 4);
                            f++;
                        }
                        
                    case 19:
                         if(v<1){
                            cola.insertarFicha("v", 4);
                            v++;
                        }
                    case 20:
                         if(y<1){
                            cola.insertarFicha("y", 4);
                            y++;
                        }
                    case 21:
                         if(q<1){
                            cola.insertarFicha("q", 5);
                            q++;
                        }
                    case 22:
                         if(j<1){
                            cola.insertarFicha("j", 8);
                            j++;
                        }
                        
                    case 23:
                         if(ñ<1){
                            cola.insertarFicha("ñ", 8);
                            ñ++;
                        }
                        
                    case 24:
                         if(x<1){
                            cola.insertarFicha("x", 8);
                            x++;
                        }
                       
                    case 25:
                         if(z<1){
                            cola.insertarFicha("z", 10);
                            z++;
                        }
                        
                 
                            
                }
                
            }
            
            //System.out.println("Tamaño de Cola: "+cola.tamaño);
            cLetras =  cola;
            //System.out.println("Tamaño cola: "+cLetras.tamaño);
        } catch (ParserConfigurationException | SAXException | IOException ex) {
            Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println(ex.getMessage());
        }
      
      
    }//GEN-LAST:event_jButton1ActionPerformed

    
    
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        if(analizado == true && jugadorCreado == true){
            
            VentanaJuego v = new VentanaJuego();
            v.setVisible(true);
            this.dispose();
            mod.getLp().mostrarPalabras();
          mod.getLc().mostrarListaJugadores();
          mod.setColaL(cLetras);
          mod.getColaL().mostrarLetrasEnCola();
          
        }
        else{
            
            //JOptionPane.showMessageDialog(null, "Analizar Archivo/Crear Jugadores");
        }
        
        
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btnAgregarJugadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarJugadorActionPerformed
       if(analizado == true && !txtJugadores.getText().equals("")){
            
            ListaSimpleLetra lista = new ListaSimpleLetra();
            if(cLetras.tamaño >=11){
                for(int i = 0; i<=6;i++){
                    int valorLetra = cLetras.inicio.getPunteo();
                    String letraObtenida = cLetras.sacarLetra();
                    //System.out.println("Valor de la letra: ("+valorLetra+")");
                lista.agregarLetra(letraObtenida, valorLetra);
            }
                //System.out.println("-------------------------------");
               
            mod.getLc().insertarJugador(txtJugadores.getText(), lista);
                cLetras.mostrarLetrasEnCola();
                
        jugadorCreado = true;
        //JOptionPane.showMessageDialog(null, "Jugador Agregado");
        txtJugadores.setText("");
            }
            else{
                JOptionPane.showMessageDialog(null, "Límite de jugadores alcanzados");
                txtJugadores.setText("");
            }
       }
       
       else{
           //JOptionPane.showMessageDialog(null, "Analizar un archivo xml");
           try {
                //System.out.println(cLetras.sacarLetra());
           } catch (Exception e) {
               System.out.println("Error: "+e.getMessage());
           }
           
       }
        
    }//GEN-LAST:event_btnAgregarJugadorActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregarJugador;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JTextField txtJugadores;
    // End of variables declaration//GEN-END:variables
}
